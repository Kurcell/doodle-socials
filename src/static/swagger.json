{
  "openapi": "3.0.0",
  "info": {
    "description": "Routes for the Social aspects of the Dudol platform.",
    "version": "1.0.0",
    "title": "Dudol Social API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and Authorization routes."
    },
    {
      "name": "Users",
      "description": "User Account Details."
    },
    {
      "name": "Posts",
      "description": "Containers for doodles."
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns greeting from API.",
        "responses": {
          "200": {
            "description": "OK",
            "content" : {
              "text/plain":{
                "schema":{
                  "type" : "string",
                  "example": "Welcome to Dudol's Social API!"
                }
              }
            }
          }
        }
      }
    },
    "/hello": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns greeting from API if the user is logged in.",
        "responses": {
          "200": {
            "description": "OK",
            "content" : {
              "text/plain":{
                "schema":{
                  "type" : "string",
                  "example": "Hello, <Name>!"
                }
              }
            }
          }
        }
      }
    },
    "/verify": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Verifies that a user is logged in.",
        "responses": {
          "200": {
            "description": "OK",
            "content" : {
              "text/plain":{
                "schema":{
                  "$ref": "#/components/schemas/authBody"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registers a user.",
        "requestBody": {
          "description": "User Register Request Body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content" : {
              "text/plain":{
                "schema":{
                  "$ref": "#/components/schemas/messageBody"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs in a user.",
        "requestBody": {
          "description": "User Login Request Body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content" : {
              "text/plain":{
                "schema":{
                  "$ref": "#/components/schemas/messageBody"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs out a user.",
        "responses": {
          "201": {
            "description": "OK",
            "content" : {
              "text/plain":{
                "schema":{
                  "$ref": "#/components/schemas/messageBody"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a user with given information.",
        "requestBody": {
          "description": "User Create Request Body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      }
    },
    "/user/follow": {
      "get": {
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "required": false,
            "description": "ID of the user to be followed.",
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "Updates follow status between an authenticated user and a given user.",
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/follow"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/follow"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Reads all users from database.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/user"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Finds a user of the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to retrieve.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user of the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update.",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "User Update Request Body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deletes a user of the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      }
    },
    "/post": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Creates a post with given information.",
        "requestBody": {
          "description": "Post Create Request Body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      }
    },
    "/post/like": {
      "get": {
        "parameters": [
          {
            "name": "pid",
            "in": "query",
            "required": false,
            "description": "ID of the post to be liked.",
            "type": "string"
          }
        ],
        "tags": [
          "Posts"
        ],
        "summary": "Updates like status between an authenticated user and a post.",
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/like"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/like"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Reads all posts from database.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/post"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/discover": {
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "required": false,
          "description": "Page number for pagination purposes.",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Reads all posts from database from users that an authenitcated user isn't following.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/postFeedBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/following": {
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "required": false,
          "description": "Page number for pagination purposes.",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Reads all posts from database from users that an authenitcated user is following.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/postFeedBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/post/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Finds a post of the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the post to retrieve.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Updates a post of the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the post to update.",
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Post Update Request Body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postPostBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Deletes a post of the given id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the post to delete.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "messageBody": {
        "type": "object",
        "properties": {
          "message": {
            "type": "boolean",
            "format": "boolean"
          }
        }
      },
      "loginBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "string"
          },
          "password": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "authBody": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "format": "string"
          },
          "username": {
            "type": "string",
            "format": "string"
          },
          "screenname": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "format": "integer"
          },
          "username": {
            "type": "string",
            "format": "string"
          },
          "screenname": {
            "type": "string",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "string"
          },
          "createdat": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "userPostBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "string"
          },
          "screenname": {
            "type": "string",
            "format": "string"
          },
          "profile": {
            "type": "string",
            "format": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "string"
          }
        }
      },
      "like": {
        "type": "object",
        "properties": {
          "like_id": {
            "type": "integer",
            "format": "integer"
          },
          "liking_user": {
            "type": "integer",
            "format": "integer"
          },
          "liked_post": {
            "type": "integer",
            "format": "integer"
          }
        }
      },
      "follow": {
        "type": "object",
        "properties": {
          "follow_id": {
            "type": "integer",
            "format": "integer"
          },
          "follower_id": {
            "type": "integer",
            "format": "integer"
          },
          "followee_id": {
            "type": "integer",
            "format": "integer"
          }
        }
      },
      "post": {
        "type": "object",
        "properties": {
          "pid": {
            "type": "integer",
            "format": "integer"
          },
          "user_id": {
            "type": "integer",
            "format": "integer"
          },
          "doodle_id": {
            "type": "integer",
            "format": "integer"
          },
          "likes": {
            "type": "integer",
            "format": "integer"
          },
          "createdat": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "postFeedBody": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "integer",
            "format": "integer"
          },
          "username": {
            "type": "string",
            "format": "string"
          },
          "screenname": {
            "type": "string",
            "format": "string"
          },
          "liked": {
            "type": "boolean",
            "format": "boolean"
          },
          "pid": {
            "type": "integer",
            "format": "integer"
          },
          "doodle_id": {
            "type": "integer",
            "format": "integer"
          },
          "likes": {
            "type": "integer",
            "format": "integer"
          },
          "createdat": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "postPostBody": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "integer"
          },
          "doodle_id": {
            "type": "integer",
            "format": "integer"
          }
        }
      }
    }
  }
}